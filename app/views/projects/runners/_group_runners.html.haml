= render ::Layouts::CrudComponent.new(s_('Runners|Group runners'),
  icon: 'group',
  count: @group_runners_count,
  options: { data: { testid: 'group-runners' } }) do |c|
  - c.with_description do
    - link = link_to _('Runner API'), help_page_path('api/runners.md')
    = _('These runners are shared across projects in this group.')
    = _('Group runners can be managed with the %{link}.').html_safe % { link: link }
  - if @project.group
    - c.with_actions do
      - if @project.group_runners_enabled?
        = render Pajamas::ButtonComponent.new(href: toggle_group_runners_project_runners_path(@project), method: :post, size: :small) do
          = _('Disable group runners')
      - else
        = render Pajamas::ButtonComponent.new(href: toggle_group_runners_project_runners_path(@project), variant: :confirm, category: :secondary, method: :post, size: :small) do
          = _('Enable group runners')
      %span.gl-text-sm.gl-text-subtle= _('for this project')

  - c.with_body do
    - if !@project.group
      .gl-text-subtle= _('This project does not belong to a group and cannot make use of group runners.')

    - elsif @group_runners.empty?
      .gl-text-subtle
        = _('This group does not have any group runners yet.')
        - if can?(current_user, :register_group_runners, @project.group) || can?(current_user, :create_runner, @project.group)
          - group_link_start = "<a href='#{group_runners_path(@project.group)}'>".html_safe
          - group_link_end = '</a>'.html_safe
          = s_("Runners|To register them, go to the %{linkStart}group's Runners page%{linkEnd}.").html_safe % { linkStart: group_link_start, linkEnd: group_link_end }
        - else
          = _('Ask your group owner to set up a group runner.')

    - else
      %ul.content-list
        = render partial: 'projects/runners/runner', collection: @group_runners, as: :runner
      = paginate @group_runners, theme: "gitlab", param_name: "group_runners_page", params: { expand_runners: true, anchor: 'js-runners-settings' }
