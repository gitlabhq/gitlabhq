- @gfm_form = true
- add_to_breadcrumbs _("Merge requests"), project_merge_requests_path(@project)
- breadcrumb_title @merge_request.to_reference
- page_title "#{@merge_request.title} (#{@merge_request.to_reference})", _("Merge requests")
- page_description @merge_request.description_html
- page_card_attributes @merge_request.card_attributes
- suggest_changes_help_path = help_page_path('user/project/merge_requests/reviews/suggestions.md')
- mr_action = j(params[:tab].presence || 'show')
- add_issuable_stylesheet
- add_page_specific_style 'page_bundles/design_management'
- add_page_specific_style 'page_bundles/merge_requests'
- add_page_specific_style 'page_bundles/pipelines'
- add_page_specific_style 'page_bundles/reports'
- add_page_specific_style 'page_bundles/ci_status'

- unless rapid_diffs_page_enabled?
  - add_page_startup_api_call @endpoint_metadata_url
  - add_page_startup_api_call @linked_file_url if @linked_file_url
  - if mr_action == 'diffs' && !@file_by_file_default
    - add_page_startup_api_call @endpoint_diff_batch_url

.merge-request{ data: { mr_action: mr_action, url: merge_request_path(@merge_request, format: :json), project_path: @merge_request.project.full_path, lock_version: @merge_request.lock_version, diffs_batch_cache_key: @diffs_batch_cache_key } }
  = render "projects/merge_requests/mr_title"
  #js-review-drawer{ data: review_bar_data(@merge_request, current_user) }
  #js-merge-sticky-header{ data: { data: sticky_header_data(@project, @merge_request).to_json } }
  .merge-request-details.issuable-details{ data: { id: @merge_request.project.id } }
    .merge-request-sticky-header.gl-border-b{ class: "!gl-h-auto" }
      = render "projects/merge_requests/mr_box"
      .merge-request-tabs-container.gl-flex.gl-justify-between.gl-relative{ class: "#{'is-merge-request' if !fluid_layout} #{'js-tabs-affix' unless ENV['RAILS_ENV'] == 'test'}" }
        %ul.merge-request-tabs.nav-tabs.nav.nav-links.gl-flex.gl-flex-nowrap.gl-m-0.gl-p-0.gl-w-full.lg:gl-w-auto.gl-border-0.gl-h-9
          = render "projects/merge_requests/tabs/tab", class: "notes-tab", testid: "notes-tab" do
            = tab_link_for @merge_request, :show, force_link: @commit.present? do
              = _("Overview")
              = gl_badge_tag @merge_request.related_notes.user.count, { class: 'js-discussions-count' }
          - if @merge_request.source_project
            = render "projects/merge_requests/tabs/tab", name: "commits", class: "commits-tab", testid: "commits-tab" do
              = tab_link_for @merge_request, :commits do
                = _("Commits")
                = gl_badge_tag tab_count_display(@merge_request, @commits_count), { class: 'js-commits-count' }
          - if @project.builds_enabled?
            = render "projects/merge_requests/tabs/tab", name: "pipelines", class: "pipelines-tab" do
              = tab_link_for @merge_request, :pipelines do
                = _("Pipelines")
                = gl_badge_tag @number_of_pipelines, { class: 'js-pipelines-mr-count' }
          = render_if_exists "projects/merge_requests/reports_tab"
          = render "projects/merge_requests/tabs/tab", name: "diffs", class: "diffs-tab js-diffs-tab", id: "diffs-tab", testid: "diffs-tab" do
            = tab_link_for @merge_request, :diffs do
              = _("Changes")
              = gl_badge_tag tab_count_display(@merge_request, @diffs_count), { class: 'js-changes-tab-count', data: { gid: @merge_request.to_gid.to_s } }
        .merge-request-tabs-actions.gl-flex.gl-flex-wrap.gl-items-center.gl-gap-3
          #js-vue-discussion-counter{ data: { blocks_merge: @project.only_allow_merge_if_all_discussions_are_resolved?.to_s } }
          - if !!@issuable_sidebar.dig(:current_user, :id)
            .js-sidebar-todo-widget-root{ data: { project_path: @issuable_sidebar[:project_full_path], iid: @issuable_sidebar[:iid], id: @issuable_sidebar[:id] } }
            - if notifications_todos_buttons_enabled?
              .js-sidebar-subscriptions-widget-root{ data: { full_path: @issuable_sidebar[:project_full_path], iid: @issuable_sidebar[:iid] } }
          #js-submit-review-button
    .tab-content#diff-notes-app
      #js-diff-file-finder
        #js-code-navigation
      = render "projects/merge_requests/tabs/pane", id: "notes", class: "notes voting_notes" do
        .merge-request-overview
          %section
            .issuable-discussion.js-vue-notes-event
              - if @merge_request.description.present?
                .detail-page-description.gl-pb-0
                  = render "projects/merge_requests/description"
              = render "projects/merge_requests/awards_block"
              .js-verification-alert{ data: identity_verification_alert_data(@merge_request) }
              = render "projects/merge_requests/widget"
              - if mr_action === "show"
                - add_page_startup_api_call discussions_path(@merge_request, per_page: 20, notes_filter: 0, persist_filter: false)
                - add_page_startup_api_call widget_project_json_merge_request_path(@project, @merge_request, format: :json)
                - add_page_startup_api_call cached_widget_project_json_merge_request_path(@project, @merge_request, format: :json)
              #js-vue-mr-discussions{ data: { notes_data: notes_data(@merge_request).to_json,
                endpoint_metadata: @endpoint_metadata_url,
                noteable_data: serialize_issuable(@merge_request, serializer: 'noteable'),
                noteable_type: 'MergeRequest',
                notes_filters: UserPreference.notes_filters.to_json,
                notes_filter_value: current_user&.notes_filter_for(@merge_request),
                target_type: 'merge_request',
                help_page_path: suggest_changes_help_path,
                current_user_data: @current_user_data,
                is_locked: @merge_request.discussion_locked.to_s,
                report_abuse_path: add_category_abuse_reports_path,
                new_comment_template_paths: new_comment_template_paths(@project.group, @project).to_json,
                new_custom_emoji_path: new_custom_emoji_path(@project.group) } }
          = render 'shared/issuable/sidebar', issuable_sidebar: @issuable_sidebar, assignees: @merge_request.assignees, reviewers: @merge_request.reviewers, source_branch: @merge_request.source_branch

      = render "projects/merge_requests/tabs/pane", name: "commits", id: "commits", class: "commits" do
        -# This tab is always loaded via AJAX
      = render "projects/merge_requests/tabs/pane", name: "pipelines", id: "pipelines", class: "pipelines" do
        - if @project.builds_enabled?
          = render 'projects/commit/pipelines_list', disable_initialization: true, endpoint: pipelines_project_merge_request_path(@project, @merge_request)
      = render_if_exists "projects/merge_requests/reports_tab_pane"
      - if rapid_diffs_page_enabled?
        = render "projects/merge_requests/tabs/pane", name: "diffs", class: "diffs", id: 'diffs' do
          = render 'projects/merge_requests/rapid_diffs_app'
      - else
        - params = request.query_parameters.merge(ck: @diffs_batch_cache_key, diff_head: true)
        = render "projects/merge_requests/tabs/pane", name: "diffs", id: "js-diffs-app", class: "diffs", data: diffs_tab_pane_data(@project, @merge_request, params)

    .mr-loading-status
      .loading.hide
        = gl_loading_icon(size: 'lg')

- if @merge_request.commit_to_revert
  = render "projects/commit/change", type: 'revert', commit: @merge_request.commit_to_revert

- if @merge_request.can_be_cherry_picked?
  = render "projects/commit/change", type: 'cherry-pick', commit: @merge_request.commit_to_cherry_pick

#js-reviewer-drawer-portal

= render 'shared/web_ide_path'
