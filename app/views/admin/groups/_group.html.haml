- group = local_assigns.fetch(:group)
- remove_form_id = "js-remove-group-#{group.id}-form"

%li.group-row.gl-py-3.gl-items-center{ class: '!gl-flex', data: { testid: 'group-row-content' } }
  = render Pajamas::AvatarComponent.new(group, size: 32, alt: '')

  .gl-min-w-0.gl-grow.gl-ml-3
    .title
      = link_to [:admin, group], class: 'group-name', data: { testid: 'group-name-link' } do
        = group.full_name

    - if group.description.present?
      .description
        = markdown_field(group.namespace_details, :description)

  .stats.gl-text-subtle.gl-shrink-0.gl-hidden.sm:gl-flex
    = gl_badge_tag storage_counter(group.storage_size)

    = render_if_exists 'admin/namespace_plan_badge', namespace: group, css_class: 'gl-ml-5 gl-mr-0'
    = render 'shared/groups/badges', group: group, css_class: 'gl-ml-5'

    %span.gl-ml-5.has-tooltip{ title: _('Projects') }
      = sprite_icon('project', css_class: 'gl-align-text-bottom')
      = number_with_delimiter(group.projects.count)

    %span.gl-ml-5.has-tooltip{ title: _('Users') }
      = sprite_icon('users', css_class: 'gl-align-text-bottom')
      = number_with_delimiter(group.users_count)

    %span.gl-ml-5.visibility-icon.has-tooltip{ data: { container: 'body', placement: 'left' }, title: visibility_icon_description(group) }
      = visibility_level_icon(group.visibility_level)

  .controls.gl-flex.gl-shrink-0.gl-ml-5
    = render Pajamas::ButtonComponent.new(href: admin_group_edit_path(group), button_options: { id: "edit_#{dom_id(group)}" }) do
      = _('Edit')

    = form_tag([:admin, group], method: :delete, id: remove_form_id) do
      .js-confirm-danger{ data: group_confirm_modal_data(group: group, remove_form_id: remove_form_id, permanently_remove: true, button_text: _('Delete')) }
