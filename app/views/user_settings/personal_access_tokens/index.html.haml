- breadcrumb_title s_('AccessTokens|Access tokens')
- page_title s_('AccessTokens|Personal access tokens')
- type = _('personal access token')
- type_plural = _('personal access tokens')
- @force_desktop_expanded_sidebar = true

- if Feature.enabled?(:migrate_user_access_tokens_ui, current_user)
  #js-shared-access-token-app{ data: personal_access_token_data(@personal_access_token) }
- else
  = render ::Layouts::SettingsSectionComponent.new(page_title) do |c|
    - c.with_description do
      = s_('AccessTokens|You can generate a personal access token for each application you use that needs access to the GitLab API.')
      = s_('AccessTokens|You can also use personal access tokens to authenticate against Git over HTTP.')
      = s_('AccessTokens|They are the only accepted password when you have Two-Factor Authentication (2FA) enabled.')

    - c.with_body do
      #js-new-access-token-app{ data: { access_token_type: type } }

      = render ::Layouts::CrudComponent.new(_('Active personal access tokens'),
        icon: 'token',
        count: @active_access_tokens_size,
        count_options: { class: 'js-token-count', data: { testid: 'active-token-count' } },
        toggle_text: _('Add new token'),
        toggle_options: { data: { testid: 'add-new-token-button' } },
        form_options: { class: 'js-add-new-token-form' },
        options: { class: 'js-token-card' }) do |c|
        - c.with_form do
          = render 'shared/access_tokens/form',
            ajax: true,
            type: type,
            path: user_settings_personal_access_tokens_path,
            token: @personal_access_token,
            scopes: @scopes,
            help_path: help_page_path('user/profile/personal_access_tokens.md', anchor: 'personal-access-token-scopes')

        - c.with_body do
          #js-access-token-table-app{ data: { access_token_type: type, access_token_type_plural: type_plural, backend_pagination: 'true', initial_active_access_tokens: @active_access_tokens.to_json } }

= render 'user_settings/personal_access_tokens/dpop' if Feature.enabled?(:dpop_authentication, current_user)

#js-tokens-app{ data: { tokens_data: tokens_app_data } }
