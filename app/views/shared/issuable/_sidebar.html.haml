-# `assignees` is being passed in for populating selected assignee values in the select box and rendering the assignee link
  This should be removed when this sidebar is converted to Vue since assignee data is also available in the `issuable_sidebar` hash

- issuable_type = issuable_sidebar[:type]
- signed_in = !!issuable_sidebar.dig(:current_user, :id)
- can_edit_issuable = issuable_sidebar.dig(:current_user, :can_edit)
- add_page_startup_api_call "#{issuable_sidebar[:issuable_json_path]}?serializer=sidebar_extras"
- reviewers = local_assigns.fetch(:reviewers, nil)
- in_group_context_with_iterations = @project.group.present? && issuable_sidebar[:supports_iterations]
- is_merge_request = issuable_type === 'merge_request'
- add_page_specific_style 'page_bundles/labels'
- sidebar_header_classes = '@md/panel:gl-flex @lg/panel:!gl-hidden gl-justify-end' if is_merge_request

%aside.right-sidebar.js-right-sidebar.js-issuable-sidebar{ data: { auto_collapse: true, always_show_toggle: true, signed: { in: signed_in }, issuable_type: issuable_type }, class: "#{sidebar_gutter_collapsed_class(is_merge_request)} #{'right-sidebar-merge-requests right-sidebar-collapsed' if is_merge_request}", 'aria-live' => 'polite', 'aria-label': issuable_type }
  .issuable-sidebar{ class: "#{'is-merge-request' if is_merge_request}" }
    .issuable-sidebar-header{ class: sidebar_header_classes }
      = render Pajamas::ButtonComponent.new(button_options: { class: "gutter-toggle gl-float-right js-sidebar-toggle has-tooltip !gl-border-0" , type: 'button', 'aria-label' => _('Toggle sidebar'), title: sidebar_gutter_tooltip_text, data: { container: 'body', placement: 'left', boundary: 'viewport' } }) do
        = sidebar_gutter_toggle_icon
      - if signed_in
        - if !is_merge_request
          .js-sidebar-todo-widget-root{ data: { project_path: issuable_sidebar[:project_full_path], iid: issuable_sidebar[:iid], id: issuable_sidebar[:id] } }
        - if notifications_todos_buttons_enabled?
          .js-sidebar-subscriptions-widget-root

    = form_for issuable_type, url: issuable_sidebar[:issuable_json_path], remote: true, html: { class: "issuable-context-form inline-update js-issuable-update #{'!gl-pr-2' if is_merge_request}" } do |f|
      .block.assignee{ class: "#{'gl-mt-3' if !signed_in}", data: { testid: 'assignee-block-container' } }
        = render "shared/issuable/sidebar_assignees", issuable_sidebar: issuable_sidebar, assignees: assignees, signed_in: signed_in

      - if issuable_sidebar[:supports_severity]
        .js-sidebar-severity-widget-root

      - if reviewers
        .block.reviewer{ data: { testid: 'reviewers-block-container' } }
          = render "shared/issuable/sidebar_reviewers", issuable_sidebar: issuable_sidebar, reviewers: reviewers, signed_in: signed_in

      - if issuable_sidebar[:supports_escalation]
        .block.escalation-status{ data: { testid: 'escalation_status_container' } }
          .js-sidebar-escalation-status-root{ data: { can_update: issuable_sidebar.dig(:current_user, :can_update_escalation_status).to_s, project_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid] } }
        = render_if_exists 'shared/issuable/sidebar_escalation_policy', issuable_sidebar: issuable_sidebar

      - if @project.group.present?
        = render_if_exists 'shared/issuable/sidebar_item_epic', issuable_sidebar: issuable_sidebar, group_path: @project.group.full_path, project_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid], issuable_type: issuable_type

      .js-sidebar-labels-widget-root{ data: sidebar_labels_data(issuable_sidebar, @project) }

      - if issuable_sidebar[:supports_milestone]
        .block.milestone{ data: { testid: 'sidebar-milestones' } }
          .js-sidebar-milestone-widget-root{ data: { can_edit: can_edit_issuable.to_s, project_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid] } }

      - if in_group_context_with_iterations && @project.group.licensed_feature_available?(:iterations)
        .block{ data: { testid: 'iteration-container' } }<
          = render_if_exists 'shared/issuable/iteration_select', can_edit: can_edit_issuable.to_s, group_path: @project.group.full_path, project_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid], issuable_type: issuable_type, issue_id: issuable_sidebar[:id]

      - if issuable_sidebar[:show_crm_contacts]
        .block.contact
          .js-sidebar-crm-contacts-root{ data: { issue_id: issuable_sidebar[:id], group_issues_path: issues_group_path(@project.group) } }

      = render_if_exists 'shared/issuable/sidebar_weight', issuable_sidebar: issuable_sidebar, can_edit: can_edit_issuable.to_s, project_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid]

      - if issuable_sidebar.has_key?(:due_date)
        .js-sidebar-due-date-widget-root

      - if issuable_sidebar[:supports_time_tracking]
        .js-sidebar-time-tracking-root.block
          // Fallback while content is loading
          .title.hide-collapsed.gl-flex.gl-justify-between.gl-items-center{ class: '!gl-mb-0' }
            %span.gl-font-bold= _('Time tracking')
            = gl_loading_icon(inline: true)

      - if issuable_sidebar.dig(:features_available, :health_status)
        .js-sidebar-health-status-widget-root{ data: sidebar_status_data(issuable_sidebar, @project) }

      - if issuable_sidebar.has_key?(:confidential)
        -# haml-lint:disable InlineJavaScript
        %script#js-confidential-issue-data{ type: "application/json" }= { is_confidential: issuable_sidebar[:confidential], is_editable: can_edit_issuable }.to_json.html_safe

        = render_if_exists 'shared/issuable/sidebar_cve_id_request', issuable_sidebar: issuable_sidebar

      .js-sidebar-participants-widget-root

      - if issuable_sidebar.dig(:current_user, :can_move)
        .block
          .js-sidebar-move-issue-block{ data: { project_full_path: issuable_sidebar[:project_full_path], issue_iid: issuable_sidebar[:iid] } }

    -# haml-lint:disable InlineJavaScript
    %script.js-sidebar-options{ type: "application/json" }= issuable_sidebar_options(issuable_sidebar, @project).to_json.html_safe
