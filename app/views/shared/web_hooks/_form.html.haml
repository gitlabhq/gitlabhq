= form_errors(hook)

.js-vue-webhook-form{ data: webhook_form_data(hook) }
.form-group
  = form.label :url, s_('Webhooks|Trigger'), class: 'label-bold'
  %ul.list-unstyled
    %li.gl-pb-3
      .js-vue-push-events{ data: { push_events: hook.push_events.to_s, strategy: hook.branch_filter_strategy, is_new_hook: hook.new_record?.to_s, push_events_branch_filter: hook.push_events_branch_filter } }
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :tag_push_events,
          integration_webhook_event_human_name(:tag_push_events),
          help_text: s_('Webhooks|A new tag is pushed to the repository.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :note_events,
          integration_webhook_event_human_name(:note_events),
          help_text: s_('Webhooks|A comment is made or edited on an issue or merge request.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :confidential_note_events,
          integration_webhook_event_human_name(:confidential_note_events),
          help_text: s_('Webhooks|A comment is made or edited on a confidential issue.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :issues_events,
          integration_webhook_event_human_name(:issues_events),
          help_text: s_('Webhooks|An issue is created, updated, closed, or reopened.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :confidential_issues_events,
          integration_webhook_event_human_name(:confidential_issues_events),
          help_text: s_('Webhooks|A confidential issue is created, updated, closed, or reopened.')
    - if @group
      = render_if_exists 'groups/hooks/member_events', form: form
      = render_if_exists 'groups/hooks/project_events', form: form
      = render_if_exists 'groups/hooks/subgroup_events', form: form
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :merge_requests_events,
          integration_webhook_event_human_name(:merge_requests_events),
          help_text: s_('Webhooks|A merge request is created, updated, or merged.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :job_events,
          integration_webhook_event_human_name(:job_events),
          help_text: s_("Webhooks|A job's status changes.")
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :pipeline_events,
          integration_webhook_event_human_name(:pipeline_events),
          help_text: s_("Webhooks|A pipeline's status changes.")
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :wiki_page_events,
          integration_webhook_event_human_name(:wiki_page_events),
          help_text: s_('Webhooks|A wiki page is created or updated.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :deployment_events,
          integration_webhook_event_human_name(:deployment_events),
          help_text: s_('Webhooks|A deployment starts, finishes, fails, or is canceled.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :feature_flag_events,
          integration_webhook_event_human_name(:feature_flag_events),
          help_text: s_('Webhooks|A feature flag is turned on or off.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :releases_events,
          integration_webhook_event_human_name(:releases_events),
          help_text: s_('Webhooks|A release is created, updated, or deleted.')
    %li.gl-pb-3
      = form.gitlab_ui_checkbox_component :milestone_events,
          integration_webhook_event_human_name(:milestone_events),
          help_text: s_('Webhooks|A milestone is created, closed, reopened, or deleted.')
    %li.gl-pb-3
      - emoji_help_link = link_to s_('Which emoji events trigger webhooks'), help_page_path('user/project/integrations/webhook_events.md', anchor: 'emoji-events')
      = form.gitlab_ui_checkbox_component :emoji_events,
          integration_webhook_event_human_name(:emoji_events),
          help_text: s_('Webhooks|An emoji is awarded or revoked. %{help_link}?').html_safe % { help_link: emoji_help_link }
    %li.gl-pb-3
      - access_token_help_link = link_to s_('Which project or group access token events trigger webhooks'), help_page_path('user/project/integrations/webhook_events.md', anchor: 'project-and-group-access-token-events')
      = form.gitlab_ui_checkbox_component :resource_access_token_events,
          integration_webhook_event_human_name(:resource_access_token_events),
          help_text: s_('Webhooks|An access token expires in the next 7 days. %{help_link}?').html_safe % { help_link: access_token_help_link }
    = render_if_exists 'shared/web_hooks/vulnerability_events', form: form

.form-group
  = form.label :custom_webhook_template, s_('Webhooks|Custom webhook template (optional)'), class: 'label-bold'
  = form.text_area :custom_webhook_template, value: hook.custom_webhook_template, class: 'form-control gl-form-input gl-form-input-xl', rows: 8, maxlength: 4096
  %p.form-text.gl-text-subtle
    = link_to s_('Webhooks|How to create a custom webhook template?'), help_page_path('user/project/integrations/webhooks.md', anchor: 'custom-webhook-template')

.form-group
  = form.label :enable_ssl_verification, s_('Webhooks|SSL verification'), class: 'label-bold checkbox'
  %ul.list-unstyled
    %li
      = form.gitlab_ui_checkbox_component :enable_ssl_verification, s_('Webhooks|Enable SSL verification')
