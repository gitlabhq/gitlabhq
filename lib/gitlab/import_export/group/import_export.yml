# Model relationships to be included in the group import/export
#
# This list _must_ only contain relationships that are available to both FOSS and
# Enterprise editions. EE specific relationships must be defined in the `ee` section further
# down below.
tree:
  group:
    - :milestones
    - :badges
    - :labels
    - boards:
      - lists:
        - :label
        - :board
    - members:
      - :user
    - :namespace_settings
    - :user_contributions

included_attributes:
  user:
    - :id
    - :public_email
    - :username
  user_contributions:
    - :public_email
    - :username
    - :name
  author:
    - :name
  namespace_settings:
    - :prevent_sharing_groups_outside_hierarchy
  iterations_cadence: &iterations_cadence_definition
    - :group_id
    - :created_at
    - :updated_at
    - :start_date
    - :active
    - :roll_over
    - :title
    - :description
    - :sequence
  iterations_cadences: *iterations_cadence_definition
  iteration: &iteration_definition
    - :iid
    - :created_at
    - :updated_at
    - :start_date
    - :due_date
    - :group_id
    - :description
  iterations: *iteration_definition
  epic_boards:
    - :hide_backlog_list
    - :hide_closed_list
    - :group_id
    - :created_at
    - :updated_at
    - :name
    - :display_colors
  epic_lists:
    - :created_at
    - :updated_at
    - :position
    - :list_type
    - :group_id

excluded_attributes:
  group:
    - :owner_id
    - :created_at
    - :updated_at
    - :runners_token
    - :runners_token_encrypted
    - :saml_discovery_token
    - :trial_ends_on
    - :shared_runners_minute_limit
    - :extra_shared_runners_minutes_limit
    - :repository_size_limit
    - :max_pages_size
  epics:
    - :state_id
    - :assignee_id
    - :external_key
  iterations_cadence: &iterations_cadence_definition
    - :id
    - :next_run_date
    - :duration_in_weeks
    - :iterations_in_advance
    - :automatic
  iterations_cadences: *iterations_cadence_definition
  iteration: &iteration_excluded_definition
    - :id
    - :title
    - :title_html
    - :project_id
    - :description_html
    - :cached_markdown_version
    - :iterations_cadence_id
    - :sequence
  iterations: *iteration_excluded_definition
  epic_boards:
    - id
  epic_lists:
    - id
    - epic_board_id
    - label_id

methods:
  labels:
    - :type
  label:
    - :type
  badges:
    - :type
  notes:
    - :type
  events:
    - :action
  lists:
    - :list_type
  epics:
    - :state

# Add in this list the nested associations that are used to export the parent
# association, but are not present in the tree list. In other words, the associations
# that needs to be preloaded but do not need to be exported.
preloads:

export_reorders:

# EE specific relationships and settings to include. All of this will be merged
# into the previous structures if EE is used.
ee:
  tree:
    group:
      - epics:
        - :parent
        - :award_emoji
        - events:
          - :push_event_payload
        - label_links:
          - :label
        - notes:
          - :author
          - :award_emoji
          - events:
            - :push_event_payload
          - :system_note_metadata
        - :resource_state_events
      - epic_boards:
        - epic_lists:
          - :label
      - boards:
        - :board_assignee
        - :milestone
        - :labels
        - lists:
          - :iteration
          - :label
          - milestone:
            - events:
              - :push_event_payload
      - iterations_cadences:
        - :iterations

# When associated resources are from outside the group, you might need to
# validate that a user who is exporting the group can access these
# associations. `include_if_exportable` accepts an array of associations for a
# resource. During export, the `exportable_association?` method on the
# resource is called with the association's name and user to validate if
# associated resource can be included in the export.
#
# This definition will call epic's `exportable_association?(:parent,
# current_user: current_user)` method and include epic's parent association
# for each epic only if the method returns true:
#
# include_if_exportable:
#  group:
#    epics:
#      - :parent
include_if_exportable:
  group:
    epics:
      - :parent
