.qa-job-base:
  extends:
    - .with-ruby-slim-image
    - .default-retry
    - .qa-cache
  stage: test
  needs: []
  variables:
    USE_BUNDLE_INSTALL: "false"
    BUNDLE_GEMFILE: "Gemfile"
    SETUP_DB: "false"
  before_script:
    - !reference [.default-before_script, before_script]
    - cd ${WORKING_DIR:-qa} && bundle install

.qa-orchestrator-job-base:
  extends:
    - .qa-job-base
    - .qa-orchestrator-cache
  variables:
    WORKING_DIR: qa/gems/gitlab-orchestrator

.e2e-trigger-base:
  extends: .production  # this makes sure GITLAB_ALLOW_SEPARATE_CI_DATABASE is passed to the child pipeline
  stage: qa
  variables:
    REGISTRY_GROUP: $REGISTRY_GROUP
    REGISTRY_HOST: $REGISTRY_HOST
    FOSS_ONLY: $FOSS_ONLY
    PARENT_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
    RELEASE_IMAGE_TAG: "${CI_COMMIT_SHA}-ruby${RUBY_VERSION}"  # This contains a RUBY_VERSION suffix because Omnibus build is depending on the RUBY_VERSION
    DYNAMIC_PIPELINE_YML: "${CI_PROJECT_DIR}/qa/tmp/test-on-omnibus-pipeline.yml"  # yml files are generated by generate_e2e_pipelines task in qa/tasks/ci.rake
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID # This is needed by trigger-omnibus-env and build-cng-env jobs
    QA_EXPORT_TEST_METRICS: "true"  # Export test metrics directly to influxdb by default
    GLCI_ASSETS_IMAGE_TAG: $GLCI_ASSETS_IMAGE_TAG
  inherit:
    variables: false
  trigger:
    strategy: depend
    include:
      - artifact: $DYNAMIC_PIPELINE_YML
        job: e2e-test-pipeline-generate

.omnibus-trigger-base:
  variables:
    QA_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-ee-qa:${CI_COMMIT_SHA}"
  inherit:
    variables:
      - OMNIBUS_GITLAB_CACHE_UPDATE
      - OMNIBUS_GITLAB_CACHE_EDITION
      - OMNIBUS_GITLAB_BUILD_ON_ALL_OS

.needs-e2e-gem-cache:
  needs:
    - job: cache:e2e-ruby-gems
      optional: true
  when: always # cache jobs failing or manual should not affect ability to run a job that depends on it

.needs-orchestrator-gem-cache:
  needs:
    - job: cache:orchestrator-gems
      optional: true
  when: always

# ==========================================
# /qa linting and unit testing
# ==========================================

qa:metadata-lint:
  extends:
    - .qa-job-base
    - .needs-e2e-gem-cache
    - .qa:rules:metadata-lint
  stage: lint
  variables:
    QA_EXPORT_TEST_METRICS: "false"
    # Disable warnings in browserslist which can break on backports
    # https://github.com/browserslist/browserslist/blob/a287ec6/node.js#L367-L384
    BROWSERSLIST_IGNORE_OLD_DATA: "true"
  script:
    - bundle exec bin/qa Test::Instance::All http://localhost:3000 --test-metadata-only
    - cd ..
    - ./scripts/qa/testcases-check qa/tmp/test-metadata.json
    - ./scripts/qa/quarantine-check qa/tmp/test-metadata.json
  artifacts:
    expire_in: 31d
    when: always
    paths:
      - qa/tmp/

qa:selectors:
  extends:
    - .qa-job-base
    - .needs-e2e-gem-cache
    - .qa:rules:selectors
  stage: lint
  script:
    - bundle exec bin/qa Test::Sanity::Selectors

qa:orchestrator-lint:
  extends:
    - .qa-orchestrator-job-base
    - .needs-orchestrator-gem-cache
    - .qa:rules:gitlab-orchestrator
  stage: lint
  script:
    - bundle exec rubocop

qa:orchestrator-rspec:
  extends:
    - .qa-orchestrator-job-base
    - .needs-orchestrator-gem-cache
    - .qa:rules:gitlab-orchestrator
  stage: test
  script:
    - bundle exec rspec --force-color

qa:rspec-internal:
  extends:
    - .qa-job-base
    - .needs-e2e-gem-cache
    - .qa:rules:internal
  stage: test
  script:
    - bundle exec rspec -O .rspec_internal

# ==========================================
# E2E testing
# ==========================================

# If a rename is required for this job, please notify the Delivery team (`@gitlab-org/delivery`)
e2e:test-on-omnibus-ee:
  extends:
    - .e2e-trigger-base
    - .omnibus-trigger-base
    - .qa:rules:test-on-omnibus-ee
  needs:
    - compile-production-assets
    - build-qa-image
    - e2e-test-pipeline-generate
  variables:
    # If renaming the child pipeline, please update any references to it in the triage-ops project.
    QA_RUN_TYPE: e2e-test-on-omnibus
    RELEASE: "${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ee:${RELEASE_IMAGE_TAG}"
    PIPELINE_NAME: E2E Omnibus GitLab EE
  trigger:
    strategy: depend
    include:
      - artifact: $DYNAMIC_PIPELINE_YML
        job: e2e-test-pipeline-generate
        inputs:
          pipeline-type: internal

e2e:test-on-omnibus-ce:
  extends:
    - e2e:test-on-omnibus-ee
    - .qa:rules:test-on-omnibus-ce:follow-up
  needs:
    - compile-production-assets as-if-foss
    - build-qa-image as-if-foss
    - e2e-test-pipeline-generate as-if-foss
  variables:
    FOSS_ONLY: "1"
    RELEASE: "${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ce:${RELEASE_IMAGE_TAG}"
    GITLAB_QA_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-ce-qa:${CI_COMMIT_SHA}"
    QA_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-ce-qa:${CI_COMMIT_SHA}"
    QA_RUN_TYPE: e2e-test-on-omnibus-ce
    PIPELINE_NAME: E2E Omnibus GitLab CE

e2e:test-on-omnibus-ee-nightly:
  extends:
    - .e2e-trigger-base
    - .omnibus-trigger-base
    - .qa:rules:test-on-omnibus-nightly
  needs:
    - compile-production-assets
    - build-qa-image
    - e2e-test-pipeline-generate
  variables:
    RELEASE: "${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ee:${RELEASE_IMAGE_TAG}"
    QA_RUN_TYPE: nightly
    PIPELINE_NAME: E2E Omnibus GitLab Nightly
    DYNAMIC_PIPELINE_YML: ${CI_PROJECT_DIR}/qa/tmp/test-on-omnibus-nightly-pipeline.yml

e2e:test-on-gdk:
  extends:
    - .e2e-trigger-base
    - .qa:rules:e2e:test-on-gdk
  stage: qa
  needs:
    - build-gdk-image
    - e2e-test-pipeline-generate
  variables:
    QA_RUN_TYPE: e2e-test-on-gdk
    PIPELINE_NAME: E2E GDK
    DYNAMIC_PIPELINE_YML: ${CI_PROJECT_DIR}/qa/tmp/test-on-gdk-pipeline.yml
    GDK_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-qa-gdk:${CI_COMMIT_SHA}"

# Disabling PA tests as we're moving to decommission in FY26
.e2e:test-product-analytics:
  extends:
    - .qa:rules:e2e:test-on-gdk
  stage: qa
  allow_failure: true
  variables:
    PIPELINE_NAME: E2E Product Analytics
    GDK_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-qa-gdk:${CI_COMMIT_SHA}"
    GITLAB_QA_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-ee-qa:${CI_COMMIT_SHA}"
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA
  needs:
    - build-gdk-image
    - build-qa-image
  trigger:
    project: gitlab-org/analytics-section/product-analytics/product-analytics-devkit-mirror
    strategy: depend

e2e:test-on-cng:
  extends:
    - .e2e-trigger-base
    - .qa:rules:e2e:test-on-cng
  stage: qa
  needs:
    - compile-production-assets
    - e2e-test-pipeline-generate
  variables:
    QA_RUN_TYPE: e2e-test-on-cng
    PIPELINE_NAME: E2E CNG
    DYNAMIC_PIPELINE_YML: ${CI_PROJECT_DIR}/qa/tmp/test-on-cng-pipeline.yml

e2e:perf-on-cng:
  extends:
    - .e2e-trigger-base
    - .qa:rules:e2e:perf-on-cng
  stage: qa
  needs:
    - compile-production-assets
    - e2e-test-pipeline-generate
  variables:
    QA_RUN_TYPE: e2e-perf-on-cng
    PIPELINE_NAME: E2E Performance CNG
    DYNAMIC_PIPELINE_YML: ${CI_PROJECT_DIR}/qa/tmp/performance-on-cng-pipeline.yml
    PARENT_CI_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
  allow_failure: true

e2e:code-suggestions-eval:
  extends:
    - .qa:rules:code-suggestions-eval
  stage: qa
  needs: ["build-gdk-image"]
  variables:
    CS_EVAL_DOWNSTREAM_BRANCH: main
    GITLAB_SHA: $CI_COMMIT_SHA
  trigger:
    strategy: depend
    forward:
      yaml_variables: true
      pipeline_variables: true
    project: gitlab-com/create-stage/code-creation/code-suggestion-scenarios
    branch: $CS_EVAL_DOWNSTREAM_BRANCH

e2e:code-suggestions-eval-results:
  extends:
    - .default-retry
    - .qa:rules:code-suggestions-eval-results
  stage: post-qa
  needs:
    - e2e:code-suggestions-eval
  variables:
    TRIGGER_JOB_NAME: "e2e:code-suggestions-eval"
    DOWNSTREAM_PROJECT: gitlab-com/create-stage/code-creation/code-suggestion-scenarios
    DOWNSTREAM_JOB_NAME: run_scenarios
    DOWNSTREAM_JOB_ARTIFACT_PATH: scores-DOWNSTREAM_JOB_ID.csv
    OUTPUT_ARTIFACT_PATH: scores.csv
  before_script:
    - source scripts/utils.sh
    - install_gitlab_gem
  script:
    - scripts/download-downstream-artifact.rb
  artifacts:
    expose_as: 'Code Suggestions evaluation results'
    paths:
      - scores.csv

e2e:fulfillment-quarantine-report:
  extends:
    - .qa:rules:fulfillment-e2e-quarantine-report
  stage: qa
  before_script:
    - cd qa && bundle install
    - apt-get update && apt-get install -y jq
  variables:
    RSPEC_JSON: "tmp/rspec-fulfillment-quarantined.json"
    NOTES_API: "https://gitlab.com/api/v4/projects/$CI_MERGE_REQUEST_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes?per_page=100"
    FULFILLMENT_SPECS_PATH: "qa/specs/features/ee/browser_ui/11_fulfillment"
  script:
    - bundle exec rspec $FULFILLMENT_SPECS_PATH --tag quarantine --format json --out $RSPEC_JSON --dry-run
    - |
      if [[ -f $RSPEC_JSON && $(cat $RSPEC_JSON | jq ".examples[]") ]]
      then # quarantined tests found
        existing_comment=$(curl $NOTES_API -H "PRIVATE-TOKEN: $PROJECT_TOKEN_FOR_CI_SCRIPTS_API_USAGE" | jq ".[] | select(.body | contains(\"# Quarantined Fulfillment QA E2E Tests\"))")
        if [[ ! -z $existing_comment ]]
        then
          echo 'MR comment already exists, doing nothing'
        else
          COMMENT_HEADER=$'# Quarantined Fulfillment QA E2E Tests\nThe following Fulfillment QA E2E tests are in quarantine. If your changes would be covered by these tests, please be sure to perform manual testing.\n'
          COMMENT_TABLE=$(cat $RSPEC_JSON | jq --raw-output '"|Description|Location|\n|---|---|\n" + ([.examples[] | "| \(.full_description) | \(.id) |\n"] | join(""))')
          curl --request POST $NOTES_API -H "PRIVATE-TOKEN: $PROJECT_TOKEN_FOR_CI_SCRIPTS_API_USAGE" --data-urlencode "body=$COMMENT_HEADER $COMMENT_TABLE"
        fi
      else
        echo 'No quarantined tests found'
      fi
