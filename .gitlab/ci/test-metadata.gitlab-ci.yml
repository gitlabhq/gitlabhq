.tests-metadata-state:
  artifacts:
    expire_in: 31d
    paths:
      - knapsack/
      - rspec/
      - crystalball/
    when: always

retrieve-tests-metadata:
  extends:
    - .tests-metadata-state
    - .fast-no-clone-job
    - .test-metadata:rules:retrieve-tests-metadata
  # We use a smaller image for this job only (update-tests-metadata compiles some gems)
  image: ${GITLAB_DEPENDENCY_PROXY_ADDRESS}ruby:${RUBY_VERSION}-alpine3.20
  stage: prepare
  needs: []
  variables:
    FILES_TO_DOWNLOAD: >
      scripts/setup/tests-metadata.rb
  before_script:
    - apk add --no-cache --update curl  # Not present in ruby-alpine, so we add it manually
    - !reference [".fast-no-clone-job", before_script]
  script:
    - run_with_custom_exit_code ruby scripts/setup/tests-metadata.rb retrieve

update-tests-metadata:
  extends:
    - .tests-metadata-state
    - .test-metadata:rules:update-tests-metadata
  image: ${GITLAB_DEPENDENCY_PROXY_ADDRESS}ruby:${RUBY_VERSION}
  stage: post-test
  needs:
    - job: retrieve-tests-metadata
      optional: true
    - job: rspec:artifact-collector unit
      optional: true
    - job: rspec:artifact-collector part-a
      optional: true
    - job: rspec:artifact-collector part-b
      optional: true
    - job: rspec:artifact-collector ee unit
      optional: true
    - job: rspec:artifact-collector ee remainder
      optional: true
  variables:
    FLAKY_RSPEC_GENERATE_REPORT: "true"
  script:
    - source scripts/utils.sh
    - source scripts/rspec_helpers.sh
    - |
      function update_metadata() {
        test -f "${FLAKY_RSPEC_SUITE_REPORT_PATH}" || echo -e "\e[31m" 'Consider add ~"pipeline:run-all-rspec" to run full rspec jobs' "\e[0m"
        retry gem install fog-aws mime-types activesupport rspec_profiling postgres-copy --no-document
        update_tests_metadata
        update_tests_mapping
      }

      run_with_custom_exit_code update_metadata

verify-tests-metadata:
  extends:
    - .default-retry
    - .test-metadata:rules:update-tests-metadata
  image: ${GITLAB_DEPENDENCY_PROXY_ADDRESS}ruby:${RUBY_VERSION}-slim
  stage: post-test
  needs:
    - update-tests-metadata
  before_script:
    - source scripts/utils.sh
    - install_activesupport_gem
  script:
    - run_with_custom_exit_code scripts/setup/tests-metadata.rb verify

export-predictive-test-metrics:
  image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/gitlab-build-images/ci/${BUILD_OS}-${OS_VERSION}-slim-ruby-${RUBY_VERSION}:rubygems-${RUBYGEMS_VERSION}-git-${GIT_VERSION}
  extends:
    - .predictive:rules:default
  stage: post-test
  allow_failure: true
  dependencies: []
  variables:
    GLCI_CRYSTALBALL_MAPPING_DIR: "tmp/crystalball_mappings"
    GLCI_PREDICTIVE_TEST_METRICS_OUTPUT_DIR: "tmp/predictive_tests"
    GLCI_ALL_FAILED_RSPEC_TESTS_FILE: "${GLCI_PREDICTIVE_TEST_METRICS_OUTPUT_DIR}/rspec_all_failed_tests.txt"
  before_script:
    - apt update && apt install -y curl
    - source ./scripts/utils.sh
    - source ./scripts/rspec_helpers.sh
    - retrieve_failed_tests "${GLCI_PREDICTIVE_TEST_METRICS_OUTPUT_DIR}" "oneline" "latest"
    - |
      mkdir -p "$GLCI_CRYSTALBALL_MAPPING_DIR/described_class"
      retrieve_tests_mapping "$RSPEC_PACKED_TESTS_MAPPING_PATH" "$GLCI_CRYSTALBALL_MAPPING_DIR/described_class/mapping.json"
    - |
      mkdir -p "$GLCI_CRYSTALBALL_MAPPING_DIR/coverage"
      retrieve_tests_mapping "$RSPEC_PACKED_TESTS_MAPPING_ALT_PATH" "$GLCI_CRYSTALBALL_MAPPING_DIR/coverage/mapping.json"
  script:
    - tooling/bin/predictive_tests --export-selected-test-metrics
  artifacts:
    expire_in: 7d
    paths:
      - $GLCI_CRYSTALBALL_MAPPING_DIR
      - $GLCI_PREDICTIVE_TEST_METRICS_OUTPUT_DIR
