# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: contract.proto

require 'google/protobuf'

require 'google/protobuf/struct_pb'


descriptor_data = "\n\x0e\x63ontract.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x9b\x01\n\x0b\x43lientEvent\x12-\n\x0cstartRequest\x18\x01 \x01(\x0b\x32\x15.StartWorkflowRequestH\x00\x12)\n\x0e\x61\x63tionResponse\x18\x02 \x01(\x0b\x32\x0f.ActionResponseH\x00\x12&\n\theartbeat\x18\x03 \x01(\x0b\x32\x11.HeartbeatRequestH\x00\x42\n\n\x08response\"\xc0\x03\n\x14StartWorkflowRequest\x12\x15\n\rclientVersion\x18\x01 \x01(\t\x12\x12\n\nworkflowID\x18\x02 \x01(\t\x12\x1a\n\x12workflowDefinition\x18\x03 \x01(\t\x12\x0c\n\x04goal\x18\x04 \x01(\t\x12\x18\n\x10workflowMetadata\x18\x05 \x01(\t\x12\x1a\n\x12\x63lientCapabilities\x18\x06 \x03(\t\x12\x1a\n\x08mcpTools\x18\x08 \x03(\x0b\x32\x08.McpTool\x12.\n\x12\x61\x64\x64itional_context\x18\t \x03(\x0b\x32\x12.AdditionalContext\x12 \n\x08\x61pproval\x18\n \x01(\x0b\x32\t.ApprovalH\x00\x88\x01\x01\x12\x30\n\nflowConfig\x18\x0b \x01(\x0b\x32\x17.google.protobuf.StructH\x01\x88\x01\x01\x12$\n\x17\x66lowConfigSchemaVersion\x18\x0c \x01(\tH\x02\x88\x01\x01\x12\x19\n\x11preapproved_tools\x18\r \x03(\tB\x0b\n\t_approvalB\r\n\x0b_flowConfigB\x1a\n\x18_flowConfigSchemaVersionJ\x04\x08\x07\x10\x08\"\x9e\x01\n\x0e\x41\x63tionResponse\x12\x11\n\trequestID\x18\x01 \x01(\t\x12\x10\n\x08response\x18\x02 \x01(\t\x12/\n\x11plainTextResponse\x18\x03 \x01(\x0b\x32\x12.PlainTextResponseH\x00\x12%\n\x0chttpResponse\x18\x04 \x01(\x0b\x32\r.HttpResponseH\x00\x42\x0f\n\rresponse_type\"%\n\x10HeartbeatRequest\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\"4\n\x11PlainTextResponse\x12\x10\n\x08response\x18\x01 \x01(\t\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\x9c\x01\n\x0cHttpResponse\x12+\n\x07headers\x18\x01 \x03(\x0b\x32\x1a.HttpResponse.HeadersEntry\x12\x12\n\nstatusCode\x18\x02 \x01(\x05\x12\x0c\n\x04\x62ody\x18\x03 \x01(\t\x12\r\n\x05\x65rror\x18\x04 \x01(\t\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf4\x03\n\x06\x41\x63tion\x12\x11\n\trequestID\x18\x01 \x01(\t\x12\'\n\nrunCommand\x18\x02 \x01(\x0b\x32\x11.RunCommandActionH\x00\x12)\n\x0erunHTTPRequest\x18\x03 \x01(\x0b\x32\x0f.RunHTTPRequestH\x00\x12 \n\x0brunReadFile\x18\x04 \x01(\x0b\x32\t.ReadFileH\x00\x12\"\n\x0crunWriteFile\x18\x05 \x01(\x0b\x32\n.WriteFileH\x00\x12\'\n\rrunGitCommand\x18\x06 \x01(\x0b\x32\x0e.RunGitCommandH\x00\x12 \n\x0brunEditFile\x18\x07 \x01(\x0b\x32\t.EditFileH\x00\x12\'\n\rnewCheckpoint\x18\x08 \x01(\x0b\x32\x0e.NewCheckpointH\x00\x12\'\n\rlistDirectory\x18\t \x01(\x0b\x32\x0e.ListDirectoryH\x00\x12\x15\n\x04grep\x18\n \x01(\x0b\x32\x05.GrepH\x00\x12\x1f\n\tfindFiles\x18\x0b \x01(\x0b\x32\n.FindFilesH\x00\x12!\n\nrunMCPTool\x18\x0c \x01(\x0b\x32\x0b.RunMCPToolH\x00\x12\x17\n\x05mkdir\x18\r \x01(\x0b\x32\x06.MkdirH\x00\x12\"\n\x0crunReadFiles\x18\x0e \x01(\x0b\x32\n.ReadFilesH\x00\x42\x08\n\x06\x61\x63tion\"n\n\x10RunCommandAction\x12\x0f\n\x07program\x18\x03 \x01(\t\x12\x11\n\targuments\x18\x04 \x03(\t\x12\r\n\x05\x66lags\x18\x05 \x03(\tJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03R\x07\x63ommandR\x12withGitCredentials\"\x1c\n\x08ReadFile\x12\x10\n\x08\x66ilepath\x18\x01 \x01(\t\"\x1e\n\tReadFiles\x12\x11\n\tfilepaths\x18\x01 \x03(\t\"/\n\tWriteFile\x12\x10\n\x08\x66ilepath\x18\x01 \x01(\t\x12\x10\n\x08\x63ontents\x18\x02 \x01(\t\"B\n\x08\x45\x64itFile\x12\x10\n\x08\x66ilepath\x18\x01 \x01(\t\x12\x11\n\toldString\x18\x02 \x01(\t\x12\x11\n\tnewString\x18\x03 \x01(\t\"J\n\x0eRunHTTPRequest\x12\x0e\n\x06method\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x11\n\x04\x62ody\x18\x03 \x01(\tH\x00\x88\x01\x01\x42\x07\n\x05_body\"^\n\rRunGitCommand\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12\x16\n\targuments\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x16\n\x0erepository_url\x18\x03 \x01(\tB\x0c\n\n_arguments\"N\n\x14GenerateTokenRequest\x12\x1f\n\x12workflowDefinition\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x15\n\x13_workflowDefinition\"9\n\x15GenerateTokenResponse\x12\r\n\x05token\x18\x01 \x01(\t\x12\x11\n\texpiresAt\x18\x02 \x01(\x03\"\x12\n\x10ListToolsRequest\";\n\x11ListToolsResponse\x12&\n\x05tools\x18\x01 \x03(\x0b\x32\x17.google.protobuf.Struct\"Q\n\rNewCheckpoint\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x12\n\ncheckpoint\x18\x02 \x01(\t\x12\x0c\n\x04goal\x18\x03 \x01(\t\x12\x0e\n\x06\x65rrors\x18\x04 \x03(\t\"\"\n\rListDirectory\x12\x11\n\tdirectory\x18\x01 \x01(\t\"K\n\x04Grep\x12\x18\n\x10search_directory\x18\x01 \x01(\t\x12\x0f\n\x07pattern\x18\x02 \x01(\t\x12\x18\n\x10\x63\x61se_insensitive\x18\x03 \x01(\x08\"!\n\tFindFiles\x12\x14\n\x0cname_pattern\x18\x01 \x01(\t\"A\n\x07McpTool\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x13\n\x0binputSchema\x18\x03 \x01(\t\"(\n\nRunMCPTool\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x01(\t\"\x83\x01\n\x11\x41\x64\x64itionalContext\x12\x10\n\x08\x63\x61tegory\x18\x01 \x01(\t\x12\x0f\n\x02id\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x63ontent\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x15\n\x08metadata\x18\x04 \x01(\tH\x02\x88\x01\x01\x42\x05\n\x03_idB\n\n\x08_contentB\x0b\n\t_metadata\"\xa6\x01\n\x08\x41pproval\x12&\n\x08\x61pproval\x18\x01 \x01(\x0b\x32\x12.Approval.ApprovedH\x00\x12\'\n\trejection\x18\x02 \x01(\x0b\x32\x12.Approval.RejectedH\x00\x1a\n\n\x08\x41pproved\x1a,\n\x08Rejected\x12\x14\n\x07message\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\n\n\x08_messageB\x0f\n\ruser_decision\"\x1f\n\x05Mkdir\x12\x16\n\x0e\x64irectory_path\x18\x01 \x01(\t\">\n\x14OsInformationContext\x12\x10\n\x08platform\x18\x01 \x01(\t\x12\x14\n\x0c\x61rchitecture\x18\x02 \x01(\t2\xaf\x01\n\x0b\x44uoWorkflow\x12,\n\x0f\x45xecuteWorkflow\x12\x0c.ClientEvent\x1a\x07.Action(\x01\x30\x01\x12>\n\rGenerateToken\x12\x15.GenerateTokenRequest\x1a\x16.GenerateTokenResponse\x12\x32\n\tListTools\x12\x11.ListToolsRequest\x1a\x12.ListToolsResponseBhZQgitlab.com/gitlab-org/modelops/applied-ml/code-suggestions/ai-assist/clients/gopb\xea\x02\x12\x44uoWorkflowServiceb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module DuoWorkflowService
  ClientEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ClientEvent").msgclass
  StartWorkflowRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("StartWorkflowRequest").msgclass
  ActionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ActionResponse").msgclass
  HeartbeatRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("HeartbeatRequest").msgclass
  PlainTextResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("PlainTextResponse").msgclass
  HttpResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("HttpResponse").msgclass
  Action = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Action").msgclass
  RunCommandAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("RunCommandAction").msgclass
  ReadFile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ReadFile").msgclass
  ReadFiles = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ReadFiles").msgclass
  WriteFile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("WriteFile").msgclass
  EditFile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("EditFile").msgclass
  RunHTTPRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("RunHTTPRequest").msgclass
  RunGitCommand = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("RunGitCommand").msgclass
  GenerateTokenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GenerateTokenRequest").msgclass
  GenerateTokenResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GenerateTokenResponse").msgclass
  ListToolsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ListToolsRequest").msgclass
  ListToolsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ListToolsResponse").msgclass
  NewCheckpoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("NewCheckpoint").msgclass
  ListDirectory = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ListDirectory").msgclass
  Grep = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Grep").msgclass
  FindFiles = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FindFiles").msgclass
  McpTool = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("McpTool").msgclass
  RunMCPTool = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("RunMCPTool").msgclass
  AdditionalContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("AdditionalContext").msgclass
  Approval = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Approval").msgclass
  Approval::Approved = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Approval.Approved").msgclass
  Approval::Rejected = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Approval.Rejected").msgclass
  Mkdir = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Mkdir").msgclass
  OsInformationContext = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("OsInformationContext").msgclass
end
